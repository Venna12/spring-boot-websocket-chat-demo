trigger:
  branches:
    include:
      - applitools

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: 'ubuntu-20.04'
        steps:
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'install'
              options: 'clean install'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              javaHomeOption: 'JDKVersion'
              mavenVersionOption: 'Default'
              mavenAuthenticateFeed: false
              effectivePomSkip: false
              sonarQubeRunAnalysis: false
            displayName: mvn clean install

          - task: Docker@2
            inputs:
              containerRegistry: 'az-jldeen-acr'
              repository: '$(Build.Repository.Name)'
              command: 'buildAndPush'
              Dockerfile: '**/Dockerfile'
            displayName: docker build/push

          - task: HelmInstaller@1
            displayName: Install Helm 3.5.0 Client Binary
            inputs:
              helmVersionToInstall: "3.5.0"

          - task: KubectlInstaller@0
            displayName: Install Kubectl 1.17.1 Tool
            inputs:
              kubectlVersion: "1.17.1"

          - bash: helm lint charts/spring-boot-websocket-chat-demo
            displayName: helm lint

          - task: HelmDeploy@0
            inputs:
              command: 'package'
              chartPath: 'charts/spring-boot-websocket-chat-demo'
              destination: '$(Pipeline.Workspace)'
          
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Pipeline.Workspace)'
              artifact: 'drop'
              publishLocation: 'pipeline'
            displayName: 'publish artifacts'

  - stage: DeployToDev
    displayName: Deploy to Dev
    dependsOn: Build
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/'))
    jobs:
      - deployment: Deploy
        displayName: Deploy job
        pool:
          vmImage: 'ubuntu-20.04'
        environment: "chattybot-dev"
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  inputs:
                    buildType: 'current'
                    artifactName: 'drop'
                    targetPath: '$(Pipeline.Workspace)'
                  displayName: 'download build artifacts'

                - task: HelmInstaller@0
                  displayName: "Install Helm 3.5.1"
                  inputs:
                    helmVersion: "3.5.0"
                    checkLatestHelmVersion: false
                    installKubectl: true
                    kubectlVersion: "1.17.1"

                - task: HelmDeploy@0
                  inputs:
                    connectionType: 'Azure Resource Manager'
                    azureSubscription: 'az-jldeen-arm'
                    azureResourceGroup: 'twt2020jd'
                    kubernetesCluster: 'tailwindtradersaksdl53e2sgw5z5i'
                    namespace: 'jfrog-dev'
                    command: 'upgrade'
                    chartType: 'FilePath'
                    chartPath: '$(Pipeline.Workspace)/drop/spring-boot-websocket-chat-demo-v0.1.0.tgz'
                    releaseName: 'azd-chattybot-dev'
                    overrideValues: 'image.repository=ttacrdl53e2sgw5z5i.azurecr.io/$(Build.Repository.Name),image.tag=$(Build.BuildId),ingress.hostname=$(hostname),buildID=$(Build.BuildId)'
                    waitForExecution: true

                # - bash: |
                #     # Run check to see when $(HOSTNAME) is available
                #     attempt_counter=0
                #     max_attempts=5

                #     until $(curl --output /dev/null --silent --head --fail https://"$(HOSTNAME)"/); do
                #       if [ ${attempt_counter} -eq ${max_attempts} ];then
                #         echo "Max attempts reached"
                #         exit 1
                #       fi

                #       printf '.'
                #       attempt_counter=$((attempt_counter+1))
                #       sleep 20
                #     done
                #   displayName: HTTP Check

                - task: ApplitoolsBuildTask@0
                  displayName: Setup Applitools Visual Testing

                - task: Maven@3
                  inputs:
                    mavenPomFile: 'visual_tests/pom.xml'
                    goals: 'test'
                    options: 'clean'
                    publishJUnitResults: true
                    testResultsFiles: '**/surefire-reports/TEST-*.xml'
                    javaHomeOption: 'JDKVersion'
                    jdkVersionOption: '1.11'
                    mavenVersionOption: 'Default'
                    mavenAuthenticateFeed: false
                    effectivePomSkip: false
                    sonarQubeRunAnalysis: false
                  env:
                    APPLITOOLS_API_KEY: $(APPLITOOLS_API_KEY)
                    RUNWHERE: pipeline
                    TEST_START_PAGE: "https://$(hostname)"
                  displayName: "Run Visual Tests"
                    
  - stage: PromoteToProd
    displayName: Promote to Prod
    dependsOn: DeployToDev
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/'))
    jobs:
      - deployment: Deploy
        displayName: Promote to Prod
        pool:
          vmImage: 'ubuntu-20.04'
        environment: "chattybot-prod"
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  inputs:
                    buildType: 'current'
                    targetPath: '$(Pipeline.Workspace)'

                - task: HelmInstaller@0
                  displayName: "Install Helm 3.5.1"
                  inputs:
                    helmVersion: "3.5.0"
                    checkLatestHelmVersion: false
                    installKubectl: true
                    kubectlVersion: "1.17.1"
                
                - task: HelmDeploy@0
                  inputs:
                    connectionType: 'Azure Resource Manager'
                    azureSubscription: 'az-jldeen-arm'
                    azureResourceGroup: 'twt2020jd'
                    kubernetesCluster: 'tailwindtradersaksdl53e2sgw5z5i'
                    namespace: 'jfrog'
                    command: 'upgrade'
                    chartType: 'FilePath'
                    chartPath: '$(Pipeline.Workspace)/drop/spring-boot-websocket-chat-demo-v0.1.0.tgz'
                    releaseName: 'azd-chattybot'
                    overrideValues: 'image.repository=ttacrdl53e2sgw5z5i.azurecr.io/$(Build.Repository.Name),image.tag=$(Build.BuildId),ingress.hostname=azdchatbot.k8s.az.jessicadeen.com,buildID=$(Build.BuildId)'
